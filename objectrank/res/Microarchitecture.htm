<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0046)http://en.wikipedia.org/wiki/Microarchitecture -->
<HTML lang=en dir=ltr xml:lang="en" 
xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>Microarchitecture - Wikipedia, the free encyclopedia</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="MSHTML 6.00.6000.16705" name=GENERATOR>
<META 
content="Microarchitecture,CPU technologies,128-bit,1992,2001,2002,2004,32-bit,64-bit,Advanced Configuration and Power Interface,Advanced Power Management" 
name=keywords><LINK title="Edit this page" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit" 
type=application/x-wiki rel=alternate><LINK href="/favicon.ico" 
rel="shortcut icon"><LINK href="http://en.wikipedia.org/apple-touch-icon.png" 
rel=apple-touch-icon><LINK title="Wikipedia (en)" href="/w/opensearch_desc.php" 
type=application/opensearchdescription+xml rel=search><LINK 
href="http://www.gnu.org/copyleft/fdl.html" rel=copyright><LINK 
title="Wikipedia RSS Feed" 
href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=rss" 
type=application/rss+xml rel=alternate><LINK title="Wikipedia Atom Feed" 
href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" 
type=application/atom+xml rel=alternate><LINK media=screen 
href="Microarchitecture_files/shared.css" type=text/css rel=stylesheet><LINK 
media=print href="Microarchitecture_files/commonPrint.css" type=text/css 
rel=stylesheet><LINK media=screen href="Microarchitecture_files/main.css" 
type=text/css rel=stylesheet><LINK media=handheld 
href="Microarchitecture_files/main(1).css" type=text/css rel=stylesheet><!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?179" type="text/css" media="screen" /><![endif]--><!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?179" type="text/css" media="screen" /><![endif]--><!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?179" type="text/css" media="screen" /><![endif]--><!--[if IE 7]><LINK 
media=screen href="Microarchitecture_files/IE70Fixes.css" type=text/css 
rel=stylesheet><![endif]--><LINK href="Microarchitecture_files/index.css" 
type=text/css rel=stylesheet><LINK media=print 
href="Microarchitecture_files/index(1).css" type=text/css rel=stylesheet><LINK 
media=handheld href="Microarchitecture_files/index(2).css" type=text/css 
rel=stylesheet><LINK href="Microarchitecture_files/index(3).css" type=text/css 
rel=stylesheet><LINK href="Microarchitecture_files/index(4).css" type=text/css 
rel=stylesheet><!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?179"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
<SCRIPT type=text/javascript>/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Microarchitecture";
		var wgTitle = "Microarchitecture";
		var wgAction = "view";
		var wgArticleId = "1410175";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = "235982632";
		var wgVersion = "1.14alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</SCRIPT>

<SCRIPT src="Microarchitecture_files/wikibits.js" type=text/javascript><!-- wikibits js --></SCRIPT>
<!-- Head Scripts -->
<SCRIPT src="Microarchitecture_files/ajax.js" type=text/javascript></SCRIPT>

<SCRIPT src="Microarchitecture_files/mwsuggest.js" 
type=text/javascript></SCRIPT>

<SCRIPT src="Microarchitecture_files/index.php" type=text/javascript><!-- site js --></SCRIPT>
</HEAD>
<BODY 
class="mediawiki ltr ns-0 ns-subject page-Microarchitecture skin-monobook">
<DIV id=globalWrapper>
<DIV id=column-content>
<DIV id=content><A id=top name=top></A>
<DIV id=siteNotice>
<SCRIPT language=JavaScript type=text/javascript>
<!--
document.writeln("\x3cp\x3e\x3c/p\x3e\n");
-->
</SCRIPT>
</DIV>
<H1 class=firstHeading>Microarchitecture</H1>
<DIV id=bodyContent>
<H3 id=siteSub>From Wikipedia, the free encyclopedia</H3>
<DIV id=contentSub></DIV>
<DIV id=jump-to-nav>Jump to: <A 
href="http://en.wikipedia.org/wiki/Microarchitecture#column-one">navigation</A>, 
<A 
href="http://en.wikipedia.org/wiki/Microarchitecture#searchInput">search</A></DIV><!-- start content -->
<P>In <A title="Computer engineering" 
href="http://en.wikipedia.org/wiki/Computer_engineering">computer 
engineering</A>, <B>microarchitecture</B> (sometime abbreviated to µarch or 
uarch) is a description of the <A class=mw-redirect title="Electrical circuit" 
href="http://en.wikipedia.org/wiki/Electrical_circuit">electrical circuitry</A> 
of a <A title=Computer 
href="http://en.wikipedia.org/wiki/Computer">computer</A>, <A 
title="Central processing unit" 
href="http://en.wikipedia.org/wiki/Central_processing_unit">central processing 
unit</A>, or <A title="Digital signal processor" 
href="http://en.wikipedia.org/wiki/Digital_signal_processor">digital signal 
processor</A> that is sufficient for completely describing the operation of the 
hardware.</P>
<P>In academic circles, the term <B>computer organization</B> is used, while in 
the computer industry, the term <B>microarchitecture</B> is more often used. 
Microarchitecture and <A class=mw-redirect title="Instruction set architecture" 
href="http://en.wikipedia.org/wiki/Instruction_set_architecture">instruction set 
architecture</A> (ISA) together constitute the field of <A 
title="Computer architecture" 
href="http://en.wikipedia.org/wiki/Computer_architecture">computer 
architecture</A>.</P>
<TABLE class=toc id=toc summary=Contents>
  <TBODY>
  <TR>
    <TD>
      <DIV id=toctitle>
      <H2>Contents</H2></DIV>
      <UL>
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#Etymology_of_the_term"><SPAN 
        class=tocnumber>1</SPAN> <SPAN class=toctext>Etymology of the 
        term</SPAN></A> 
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#Relation_to_instruction_set_architecture"><SPAN 
        class=tocnumber>2</SPAN> <SPAN class=toctext>Relation to instruction set 
        architecture</SPAN></A> 
        <UL>
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Simplified_descriptions"><SPAN 
          class=tocnumber>2.1</SPAN> <SPAN class=toctext>Simplified 
          descriptions</SPAN></A> </LI></UL>
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#Aspects_of_microarchitecture"><SPAN 
        class=tocnumber>3</SPAN> <SPAN class=toctext>Aspects of 
        microarchitecture</SPAN></A> 
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#Micro-Architectural_Concepts"><SPAN 
        class=tocnumber>4</SPAN> <SPAN class=toctext>Micro-Architectural 
        Concepts</SPAN></A> 
        <UL>
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Instruction_Set_choice"><SPAN 
          class=tocnumber>4.1</SPAN> <SPAN class=toctext>Instruction Set 
          choice</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Instruction_pipelining"><SPAN 
          class=tocnumber>4.2</SPAN> <SPAN class=toctext>Instruction 
          pipelining</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Cache"><SPAN 
          class=tocnumber>4.3</SPAN> <SPAN class=toctext>Cache</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Branch_Prediction"><SPAN 
          class=tocnumber>4.4</SPAN> <SPAN class=toctext>Branch 
          Prediction</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Superscalar"><SPAN 
          class=tocnumber>4.5</SPAN> <SPAN class=toctext>Superscalar</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Out-of-order_execution"><SPAN 
          class=tocnumber>4.6</SPAN> <SPAN class=toctext>Out-of-order 
          execution</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Speculative_execution"><SPAN 
          class=tocnumber>4.7</SPAN> <SPAN class=toctext>Speculative 
          execution</SPAN></A> 
          <LI class=toclevel-2><A 
          href="http://en.wikipedia.org/wiki/Microarchitecture#Multiprocessing_and_multithreading"><SPAN 
          class=tocnumber>4.8</SPAN> <SPAN class=toctext>Multiprocessing and 
          multithreading</SPAN></A> </LI></UL>
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#See_also"><SPAN 
        class=tocnumber>5</SPAN> <SPAN class=toctext>See also</SPAN></A> 
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#References"><SPAN 
        class=tocnumber>6</SPAN> <SPAN class=toctext>References</SPAN></A> 
        <LI class=toclevel-1><A 
        href="http://en.wikipedia.org/wiki/Microarchitecture#Further_reading"><SPAN 
        class=tocnumber>7</SPAN> <SPAN class=toctext>Further reading</SPAN></A> 
        </LI></UL></TD></TR></TBODY></TABLE>
<SCRIPT type=text/javascript>
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</SCRIPT>

<P><A id=Etymology_of_the_term name=Etymology_of_the_term></A></P>
<H2><SPAN class=editsection>[<A title="Edit section: Etymology of the term" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=1">edit</A>]</SPAN> 
<SPAN class=mw-headline>Etymology of the term</SPAN></H2>
<P>Since the 1950s, many computers used <A class=mw-redirect 
title=Microprogramming 
href="http://en.wikipedia.org/wiki/Microprogramming">microprogramming</A> to 
implement their <A title="Control logic" 
href="http://en.wikipedia.org/wiki/Control_logic">control logic</A> which 
decoded the program instructions and executed them. The bits within the 
microprogram words controlled the processor at the level of electrical 
signals.</P>
<P>The term <I>microarchitecture</I> was used to describe the units that were 
controlled by the microprogram words, as opposed to <I>architecture</I> that was 
visible and documented for programmers. While architecture usually had to be 
compatible between hardware generations, the underlying microarchitecture could 
be easily changed.</P>
<P><A id=Relation_to_instruction_set_architecture 
name=Relation_to_instruction_set_architecture></A></P>
<H2><SPAN class=editsection>[<A 
title="Edit section: Relation to instruction set architecture" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=2">edit</A>]</SPAN> 
<SPAN class=mw-headline>Relation to instruction set architecture</SPAN></H2>
<P>The microarchitecture is related to, but not the same as, the <A 
title="Instruction set" 
href="http://en.wikipedia.org/wiki/Instruction_set">instruction set 
architecture</A>. The instruction set architecture is roughly the same as the <A 
class=mw-redirect title="Programming model" 
href="http://en.wikipedia.org/wiki/Programming_model">programming model</A> of a 
processor as seen by an <A title="Assembly language" 
href="http://en.wikipedia.org/wiki/Assembly_language">assembly language</A> 
programmer or compiler writer, which includes the execution model, <A 
title="Processor register" 
href="http://en.wikipedia.org/wiki/Processor_register">processor registers</A>, 
address and data formats etc. The microarchitecture (or computer organization) 
is mainly a lower level structure and therefore governs a large number of 
details that are hidden in the programming model. It describes the constituent 
parts of the processor and how these interconnect and interoperate to implement 
the architectural specification. <SUP class=reference id=cite_ref-0><A title="" 
href="http://en.wikipedia.org/wiki/Microarchitecture#cite_note-0">[1]</A></SUP><SUP 
class=reference id=cite_ref-1><A title="" 
href="http://en.wikipedia.org/wiki/Microarchitecture#cite_note-1">[2]</A></SUP> 
<SUP class=reference id=cite_ref-2><A title="" 
href="http://en.wikipedia.org/wiki/Microarchitecture#cite_note-2">[3]</A></SUP></P>
<P>The microarchitecture of a machine is usually represented as (more or less 
detailed) diagrams that describe the interconnections of the various 
microarchitectual elements of the machine. The actual electronic circuitry that 
implements these elements is called the <B>implementation</B> of that 
microarchitecture (which also includes layout, packaging, and other physical 
details). Microarchitectual elements may be everything from single gates, via 
registers, LUTs, multiplexers, counters, etc, to complete ALUs and even larger 
elements. The electronic circuitry level can, in turn, be subdivided into 
transistor-level details, such as which basic gate-building structures are used 
and what logic implementation types (static/dynamic, number of phases, etc) are 
chosen, in addition to the actual logic design built on the foundation of these 
choices, at - mainly - the gate-level and up.</P>
<P>A few important points:</P>
<UL>
  <LI>A single microarchitecture, especially if it includes <A title=Microcode 
  href="http://en.wikipedia.org/wiki/Microcode">microcode</A>, can be used to 
  implement many different instruction sets, by means of changing the <A 
  title="Control store" 
  href="http://en.wikipedia.org/wiki/Control_store">control store</A>. This can 
  be quite complicated and cumbersome however, even when simplified by microcode 
  and/or table stuctures in ROMs or PLAs. </LI></UL>
<UL>
  <LI>Two machines may have the same microarchitecture, and hence the same block 
  diagram, but radically different hardware implementations.<SUP class=reference 
  id=cite_ref-hennessy_3-0><A title="" 
  href="http://en.wikipedia.org/wiki/Microarchitecture#cite_note-hennessy-3">[4]</A></SUP> 
  This governs both the level of the electronic circuitry and the (even more) 
  physical level of manufacturing (of both ICs and/or discrete components). 
</LI></UL>
<UL>
  <LI>Machines with different microarchitectures may have the same instruction 
  set architecture, and thus be capable of executing the same programs. New 
  microarchitectures and/or circuitry solutions, along with advances in 
  semiconductor manufacturing, are what allows newer generations of processors 
  to achieve higher performance. </LI></UL>
<P><A id=Simplified_descriptions name=Simplified_descriptions></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Simplified descriptions" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=3">edit</A>]</SPAN> 
<SPAN class=mw-headline>Simplified descriptions</SPAN></H3>
<P>A very simplified high level description — common in marketing — may show 
only fairly basic characteristics, such as bus-widths, along with various types 
of <A class=mw-redirect title="Execution units" 
href="http://en.wikipedia.org/wiki/Execution_units">execution units</A> and 
other large systems, such as <A class=mw-redirect title="Branch prediction" 
href="http://en.wikipedia.org/wiki/Branch_prediction">branch prediction</A> and 
<A class=mw-redirect title="Cache memory" 
href="http://en.wikipedia.org/wiki/Cache_memory">cache memories</A>, pictured as 
simple blocks — perhaps with some important attributes or characteristics noted. 
Some details regarding pipeline structure (like fetch, decode, assign, execute, 
write-back) may sometimes also be included.</P>
<P><A id=Aspects_of_microarchitecture name=Aspects_of_microarchitecture></A></P>
<H2><SPAN class=editsection>[<A 
title="Edit section: Aspects of microarchitecture" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=4">edit</A>]</SPAN> 
<SPAN class=mw-headline>Aspects of microarchitecture</SPAN></H2>
<P>The <A title="Instruction pipeline" 
href="http://en.wikipedia.org/wiki/Instruction_pipeline">pipelined</A> <A 
title=Datapath href="http://en.wikipedia.org/wiki/Datapath">datapath</A> is the 
most commonly used datapath design in microarchitecture today. This technique is 
used in most modern microprocessors, <A class=mw-redirect title=Microcontrollers 
href="http://en.wikipedia.org/wiki/Microcontrollers">microcontrollers</A>, and 
DSPs. The pipelined architecture allows multiple instructions to overlap in 
execution, much like an assembly line. The pipeline includes several different 
stages which are fundamental in microarchitecture designs.<SUP class=reference 
id=cite_ref-hennessy_3-1><A title="" 
href="http://en.wikipedia.org/wiki/Microarchitecture#cite_note-hennessy-3">[4]</A></SUP> 
Some of these stages include instruction fetch, instruction decode, execute, and 
write back. Some architectures include other stages such as memory access. The 
design of pipelines is one of the central microarchitectural tasks.</P>
<P>Execution units are also essential to microarchitecture. Execution units 
include <A title="Arithmetic logic unit" 
href="http://en.wikipedia.org/wiki/Arithmetic_logic_unit">arithmetic logic 
units</A> (ALU), <A title="Floating point unit" 
href="http://en.wikipedia.org/wiki/Floating_point_unit">floating point units</A> 
(FPU), load/store units, branch prediction, and <A title=SIMD 
href="http://en.wikipedia.org/wiki/SIMD">SIMD</A>. These units perform the 
operations or calculations of the processor. The choice of the number of 
execution units, their latency and throughput is a central microarchitectural 
design task. The size, latency, throughput and connectivity of memories within 
the system are also microarchitectural decisions.</P>
<P>System-level design decisions such as whether or not to include <A 
class=mw-redirect title=Peripherals 
href="http://en.wikipedia.org/wiki/Peripherals">peripherals</A>, such as <A 
title="Memory controller" 
href="http://en.wikipedia.org/wiki/Memory_controller">memory controllers</A>, 
can be considered part of the microarchitectural design process. This includes 
decisions on the performance-level and connectivity of these peripherals.</P>
<P>Unlike architectural design, where achieving a specific performance level is 
the main goal, microarchitectural design pays closer attention to other 
constraints. Since microarchitecture design decisions directly affect what goes 
into a system, attention must be paid to such issues as:</P>
<UL>
  <LI>chip area/cost 
  <LI>power consumption 
  <LI>logic complexity 
  <LI>ease of connectivity 
  <LI>manufacturability 
  <LI>ease of debugging 
  <LI>testability </LI></UL>
<P><A id=Micro-Architectural_Concepts name=Micro-Architectural_Concepts></A></P>
<H2><SPAN class=editsection>[<A 
title="Edit section: Micro-Architectural Concepts" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=5">edit</A>]</SPAN> 
<SPAN class=mw-headline>Micro-Architectural Concepts</SPAN></H2>
<P>In general, all CPUs, single-chip microprocessors or multi-chip 
implementations run programs by performing the following steps:</P>
<OL>
  <LI>read an instruction and decode it 
  <LI>find any associated data that is needed to process the instruction 
  <LI>process the instruction 
  <LI>write the results out </LI></OL>
<P>Complicating this simple-looking series of steps is the fact that the memory 
hierarchy, which includes <A class=mw-redirect title=Caching 
href="http://en.wikipedia.org/wiki/Caching">caching</A>, <A class=mw-redirect 
title="Main memory" href="http://en.wikipedia.org/wiki/Main_memory">main 
memory</A> and non-volatile storage like <A class=mw-redirect title="Hard disk" 
href="http://en.wikipedia.org/wiki/Hard_disk">hard disks</A>, (where the program 
instructions and data reside) has always been slower than the processor itself. 
Step (2) often introduces a lengthy (in CPU terms) delay while the data arrives 
over the <A class=mw-redirect title="Computer bus" 
href="http://en.wikipedia.org/wiki/Computer_bus">computer bus</A>. A 
considerable amount of research has been put into designs that avoid these 
delays as much as possible. Over the years, a central goal was to execute more 
instructions in parallel, thus increasing the effective execution speed of a 
program. These efforts introduced complicated logic and circuit structures. 
Initially these techniques could only be implemented on expensive mainframes or 
supercomputers due to the amount of circuitry needed for these techniques. As 
semiconductor manufacturing progressed, more and more of these techniques could 
be implemented on a single semiconductor chip.</P>
<P><I>See Article <A class=mw-redirect title="Central Processing Unit" 
href="http://en.wikipedia.org/wiki/Central_Processing_Unit#CPU_operation">Central 
Processing Unit</A> for a more detailed discussion on operation basics.</I></P>
<P><I>See Article <A title="History of general purpose CPUs" 
href="http://en.wikipedia.org/wiki/History_of_general_purpose_CPUs">History of 
general purpose CPUs</A> for a more detailed discussion on the development 
history of CPUs.</I></P>
<P><B>What follows is a survey of micro-architectural techniques that are common 
in modern CPUs.</B></P>
<P><A id=Instruction_Set_choice name=Instruction_Set_choice></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Instruction Set choice" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=6">edit</A>]</SPAN> 
<SPAN class=mw-headline>Instruction Set choice</SPAN></H3>
<P>The choice of which <A class=mw-redirect title="Instruction Set Architecture" 
href="http://en.wikipedia.org/wiki/Instruction_Set_Architecture">Instruction Set 
Architecture</A> to use greatly affects the complexity of implementing high 
performance devices. Over the years, computer architects have strived to 
simplify instruction sets, which enables higher performance implementations by 
allowing designers to spend effort and time on features which improve 
performance as opposed to spending their energies on the complexity inherent in 
the instruction set.</P>
<P>Instruction set design has progressed from <A 
title="Complex instruction set computer" 
href="http://en.wikipedia.org/wiki/Complex_instruction_set_computer">CISC</A>, 
<A class=mw-redirect title=RISC 
href="http://en.wikipedia.org/wiki/RISC">RISC</A>, <A class=mw-redirect 
title=VLIW href="http://en.wikipedia.org/wiki/VLIW">VLIW</A>, <A 
class=mw-redirect title="Explicitly Parallel Instruction Computing" 
href="http://en.wikipedia.org/wiki/Explicitly_Parallel_Instruction_Computing">EPIC</A> 
types. Architectures that are dealing with <A title="Data parallelism" 
href="http://en.wikipedia.org/wiki/Data_parallelism">data parallelism</A> 
include <A title=SIMD href="http://en.wikipedia.org/wiki/SIMD">SIMD</A> and <A 
title="Vector processor" 
href="http://en.wikipedia.org/wiki/Vector_processor">Vectors</A>.</P>
<P><A id=Instruction_pipelining name=Instruction_pipelining></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Instruction pipelining" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=7">edit</A>]</SPAN> 
<SPAN class=mw-headline>Instruction pipelining</SPAN></H3>
<DL>
  <DD>
  <DIV class="noprint relarticle mainarticle"><I>Main article: <A 
  title="Instruction pipeline" 
  href="http://en.wikipedia.org/wiki/Instruction_pipeline">instruction 
  pipeline</A></I></DIV></DD></DL>
<P>One of the first, and most powerful, techniques to improve performance is the 
use of the <A title="Instruction pipeline" 
href="http://en.wikipedia.org/wiki/Instruction_pipeline">instruction 
pipeline</A>. Early processor designs would carry out all of the steps above for 
one instruction before moving onto the next. Large portions of the circuitry 
were left idle at any one step; for instance, the instruction decoding circuitry 
would be idle during execution and so on.</P>
<P>Pipelines improve performance by allowing a number of instructions to work 
their way through the processor at the same time. In the same basic example, the 
processor would start to decode (step 1) a new instruction while the last one 
was waiting for results. This would allow up to four instructions to be "in 
flight" at one time, making the processor look four times as fast. Although any 
one instruction takes just as long to complete (there are still four steps) the 
CPU as a whole "retires" instructions much faster and can be run at a much 
higher clock speed.</P>
<P>RISC make pipelines smaller and much easier to construct by cleanly 
separating each stage of the instruction process and making them take the same 
amount of time — one cycle. The processor as a whole operates in an <A 
title="Assembly line" href="http://en.wikipedia.org/wiki/Assembly_line">assembly 
line</A> fashion, with instructions coming in one side and results out the 
other. Due to the reduced complexity of the <A title="Classic RISC pipeline" 
href="http://en.wikipedia.org/wiki/Classic_RISC_pipeline">Classic RISC 
pipeline</A>, the pipelined core and an instruction cache could be placed on the 
same size die that would otherwise fit the core alone on a CISC design. This was 
the real reason that RISC was faster. Early designs like the <A title=SPARC 
href="http://en.wikipedia.org/wiki/SPARC">SPARC</A> and <A 
title="MIPS architecture" 
href="http://en.wikipedia.org/wiki/MIPS_architecture">MIPS</A> often ran over 10 
times as fast as <A class=mw-redirect title=Intel 
href="http://en.wikipedia.org/wiki/Intel">Intel</A> and <A title=Motorola 
href="http://en.wikipedia.org/wiki/Motorola">Motorola</A> CISC solutions at the 
same clock speed and price.</P>
<P>Pipelines are by no means limited to RISC designs. By 1986 the 
top-of-the-line VAX (the 8800) was a heavily pipelined design, slightly 
predating the first commercial MIPS and SPARC designs. Most modern CPUs (even 
embedded CPUs) are now pipelined, and microcoded CPUs with no pipelining are 
seen only in the most area-constrained embedded processors. Large CISC machines, 
from the VAX 8800 to the modern Pentium 4 and Athlon, are implemented with both 
microcode and pipelines. Improvements in pipelining and caching are the two 
major microarchitectural advances that have enabled processor performance to 
keep pace with the circuit technology on which they are based.</P>
<P><A id=Cache name=Cache></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Cache" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=8">edit</A>]</SPAN> 
<SPAN class=mw-headline>Cache</SPAN></H3>
<DL>
  <DD>
  <DIV class="noprint relarticle mainarticle"><I>Main article: <A 
  title="CPU cache" href="http://en.wikipedia.org/wiki/CPU_cache">CPU 
  cache</A></I></DIV></DD></DL>
<P>It was not long before improvements in chip manufacturing allowed for even 
more circuitry to be placed on the die, and designers started looking for ways 
to use it. One of the most common was to add an ever-increasing amount of <A 
title="CPU cache" href="http://en.wikipedia.org/wiki/CPU_cache">cache memory</A> 
on-die. Cache is simply very fast memory, memory that can be accessed in a few 
cycles as opposed to "many" needed to talk to main memory. The CPU includes a 
cache controller which automates reading and writing from the cache, if the data 
is already in the cache it simply "appears," whereas if it is not the processor 
is "stalled" while the cache controller reads it in.</P>
<P>RISC designs started adding cache in the mid-to-late 1980s, often only 
4&nbsp;KB in total. This number grew over time, and typical CPUs now have about 
512&nbsp;KB, while more powerful CPUs come with 1 or 2 or even 4, 6, 8 or 
12&nbsp;MB, organized in multiple levels of a <A title="Memory hierarchy" 
href="http://en.wikipedia.org/wiki/Memory_hierarchy">memory hierarchy</A>. 
Generally speaking, more cache means more speed.</P>
<P>Caches and pipelines were a perfect match for each other. Previously, it 
didn't make much sense to build a pipeline that could run faster than the access 
latency of off-chip memory. Using on-chip cache memory instead, meant that a 
pipeline could run at the speed of the cache access latency, a much smaller 
length of time. This allowed the operating frequencies of processors to increase 
at a much faster rate than that of off-chip memory.</P>
<P><A id=Branch_Prediction name=Branch_Prediction></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Branch Prediction" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=9">edit</A>]</SPAN> 
<SPAN class=mw-headline>Branch Prediction</SPAN></H3>
<P>One barrier to achieving higher performance through instruction-level 
parallelism stems from pipeline stalls and flushes due to branches. Normally, 
whether a conditional branch will be taken isn't known until late in the 
pipeline as conditional branches depend on results coming from a register. From 
the time that the processor's instruction decoder has figured out that it has 
encountered a conditional branch instruction to the time that the deciding 
register value can be read out, the pipeline might be stalled for several 
cycles. On average, every fifth instruction executed is a branch, so that's a 
high amount of stalling. If the branch is taken, its even worse, as then all of 
the subsequent instructions which were in the pipeline needs to be flushed.</P>
<P>Techniques such as <A class=mw-redirect title="Branch prediction" 
href="http://en.wikipedia.org/wiki/Branch_prediction">branch prediction</A> and 
<A title="Speculative execution" 
href="http://en.wikipedia.org/wiki/Speculative_execution">speculative 
execution</A> are used to lessen these branch penalties. Branch prediction is 
where the hardware makes educated guesses on whether a particular branch will be 
taken. The guess allows the hardware to prefetch instructions without waiting 
for the register read. Speculative execution is a further enhancement in which 
the code along the predicted path is executed before it is known whether the 
branch should be taken or not.</P>
<P><A id=Superscalar name=Superscalar></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Superscalar" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=10">edit</A>]</SPAN> 
<SPAN class=mw-headline>Superscalar</SPAN></H3>
<P>Even with all of the added complexity and gates needed to support the 
concepts outlined above, improvements in semiconductor manufacturing soon 
allowed even more logic gates to be used.</P>
<P>In the outline above the processor processes parts of a single instruction at 
a time. Computer programs could be executed faster if multiple instructions were 
processed simultaneously. This is what <A title=Superscalar 
href="http://en.wikipedia.org/wiki/Superscalar">superscalar</A> processors 
achieve, by replicating functional units such as ALUs. The replication of 
functional units was only made possible when the die area of a single-issue 
processor no longer stretched the limits of what could be reliably manufactured. 
By the late 1980s, superscalar designs started to enter the market place.</P>
<P>In modern designs it is common to find two load units, one store (many 
instructions have no results to store), two or more integer math units, two or 
more floating point units, and often a <A title=SIMD 
href="http://en.wikipedia.org/wiki/SIMD">SIMD</A> unit of some sort. The 
instruction issue logic grows in complexity by reading in a huge list of 
instructions from memory and handing them off to the different execution units 
that are idle at that point. The results are then collected and re-ordered at 
the end.</P>
<P><A id=Out-of-order_execution name=Out-of-order_execution></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Out-of-order execution" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=11">edit</A>]</SPAN> 
<SPAN class=mw-headline>Out-of-order execution</SPAN></H3>
<P>The addition of caches reduces the frequency or duration of stalls due to 
waiting for data to be fetched from the memory hierarchy, but does not get rid 
of these stalls entirely. In early designs a <I>cache miss</I> would force the 
cache controller to stall the processor and wait. Of course there may be some 
other instruction in the program whose data <I>is</I> available in the cache at 
that point. <A title="Out-of-order execution" 
href="http://en.wikipedia.org/wiki/Out-of-order_execution">Out-of-order 
execution</A> allows that ready instruction to be processed while an older 
instruction waits on the cache, then re-orders the results to make it appear 
that everything happened in the programmed order.</P>
<P><A id=Speculative_execution name=Speculative_execution></A></P>
<H3><SPAN class=editsection>[<A title="Edit section: Speculative execution" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=12">edit</A>]</SPAN> 
<SPAN class=mw-headline>Speculative execution</SPAN></H3>
<P>One problem with an instruction pipeline is that there are a class of 
instructions that must make their way entirely through the pipeline before 
execution can continue. In particular, conditional branches need to know the 
result of some prior instruction before "which side" of the branch to run is 
known. For instance, an instruction that says "if x is larger than 5 then do 
this, otherwise do that" will have to wait for the results of x to be known 
before it knows if the instructions for this or that can be fetched.</P>
<P>For a small four-deep pipeline this means a delay of up to three cycles — the 
decode can still happen. But as clock speeds increase the depth of the pipeline 
increases with it, and some modern processors may have 20 stages or more. In 
this case the CPU is being stalled for the vast majority of its cycles every 
time one of these instructions is encountered.</P>
<P>The solution, or one of them, is <I><A title="Speculative execution" 
href="http://en.wikipedia.org/wiki/Speculative_execution">speculative 
execution</A></I>, also known as <I><A title="Branch predictor" 
href="http://en.wikipedia.org/wiki/Branch_predictor">branch prediction</A></I>. 
In reality one side or the other of the branch will be called much more often 
than the other, so it is often correct to simply go ahead and say "x will likely 
be smaller than five, start processing that". If the prediction turns out to be 
correct, a huge amount of time will be saved. Modern designs have rather complex 
prediction systems, which watch the results of past branches to predict the 
future with greater accuracy.</P>
<P><A id=Multiprocessing_and_multithreading 
name=Multiprocessing_and_multithreading></A></P>
<H3><SPAN class=editsection>[<A 
title="Edit section: Multiprocessing and multithreading" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=13">edit</A>]</SPAN> 
<SPAN class=mw-headline>Multiprocessing and multithreading</SPAN></H3>
<P>Computer architects have become stymied by the growing mismatch in CPU 
operating frequencies and <A title="Dynamic random access memory" 
href="http://en.wikipedia.org/wiki/Dynamic_random_access_memory">DRAM</A> access 
times. None of the techniques that exploited instruction-level parallelism 
within one program could make up for the long stalls that occurred when data had 
to be fetched from main memory. Additionally, the large transistor counts and 
high operating frequencies needed for the more advanced ILP techniques required 
power dissipation levels that could no longer be cheaply cooled. For these 
reasons, newer generations of computers have started to exploit higher levels of 
parallelism that exist outside of a single program or <A 
title="Thread (computer science)" 
href="http://en.wikipedia.org/wiki/Thread_(computer_science)">program 
thread</A>.</P>
<P>This trend is sometimes known as <I>throughput computing</I>. This idea 
originated in the mainframe market where <A class=mw-redirect title=OLTP 
href="http://en.wikipedia.org/wiki/OLTP">online transaction processing</A> 
emphasized not just the execution speed of one transaction, but the capacity to 
deal with massive numbers of transactions. With transaction-based applications 
such as network routing and web-site serving greatly increasing in the last 
decade, the computer industry has re-emphasized capacity and throughput 
issues.</P>
<P>One technique of how this parallelism is achieved is through <A 
title=Multiprocessing 
href="http://en.wikipedia.org/wiki/Multiprocessing">multiprocessing</A> systems, 
computer systems with multiple CPUs. Once reserved for high-end <A 
title="Mainframe computer" 
href="http://en.wikipedia.org/wiki/Mainframe_computer">mainframes</A> and <A 
title=Supercomputer 
href="http://en.wikipedia.org/wiki/Supercomputer">supercomputers</A>, small 
scale (2-8) multiprocessors servers have become commonplace for the small 
business market. For large corporations, large scale (16-256) multiprocessors 
are common. Even <A title="Personal computer" 
href="http://en.wikipedia.org/wiki/Personal_computer">personal computers</A> 
with multiple CPUs have appeared since the 1990s.</P>
<P>With further transistor size reductions made available with semiconductor 
technology advances, <A class=mw-redirect title="Multi-core (computing)" 
href="http://en.wikipedia.org/wiki/Multi-core_(computing)">multicore CPUs</A> 
have appeared where multiple CPUs are implemented on the same silicon chip. 
Initially used in chips targeting embedded markets, where simpler and smaller 
CPUs would allow multiple instantiations to fit on one piece of silicon. By 
2005, semiconductor technology allowed dual high-end desktop CPUs <I>CMP</I> 
chips to be manufactured in volume. Some designs, such as <A 
title="Sun Microsystems" 
href="http://en.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</A>' <A 
title="UltraSPARC T1" 
href="http://en.wikipedia.org/wiki/UltraSPARC_T1">UltraSPARC T1</A> have 
reverted back to simpler (scalar, in-order) designs in order to fit more 
processors on one piece of silicon.</P>
<P>Another technique that has become more popular recently is <A 
class=mw-redirect title=Multithreading 
href="http://en.wikipedia.org/wiki/Multithreading">multithreading</A>. In 
multithreading, when the processor has to fetch data from slow system memory, 
instead of stalling for the data to arrive, the processor switches to another 
program or program thread which is ready to execute. Though this does not speed 
up a particular program/thread, it increases the overall system throughput by 
reducing the time the CPU is idle.</P>
<P>Conceptually, multithreading is equivalent to a <A title="Context switch" 
href="http://en.wikipedia.org/wiki/Context_switch">context switch</A> at the 
operating system level. The difference is that a multithreaded CPU can do a 
thread switch in one CPU cycle instead of the hundreds or thousands of CPU 
cycles a context switch normally requires. This is achieved by replicating the 
state hardware (such as the <A title="Register file" 
href="http://en.wikipedia.org/wiki/Register_file">register file</A> and <A 
title="Program counter" 
href="http://en.wikipedia.org/wiki/Program_counter">program counter</A>) for 
each active thread.</P>
<P>A further enhancement is <A title="Simultaneous multithreading" 
href="http://en.wikipedia.org/wiki/Simultaneous_multithreading">simultaneous 
multithreading</A>. This technique allows superscalar CPUs to execute 
instructions from different programs/threads simultaneously in the same 
cycle.</P>
<P><I>See Article <A title="History of general purpose CPUs" 
href="http://en.wikipedia.org/wiki/History_of_general_purpose_CPUs#1990_to_today:_looking_forward">History 
of general purpose CPUs</A> for other research topics affecting CPU 
design.</I></P>
<P><A id=See_also name=See_also></A></P>
<H2><SPAN class=editsection>[<A title="Edit section: See also" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=14">edit</A>]</SPAN> 
<SPAN class=mw-headline>See also</SPAN></H2>
<UL>
  <LI><A title=Microprocessor 
  href="http://en.wikipedia.org/wiki/Microprocessor">Microprocessor</A> 
  <LI><A title=Microcontroller 
  href="http://en.wikipedia.org/wiki/Microcontroller">Microcontroller</A> 
  <LI><A title="Digital signal processor" 
  href="http://en.wikipedia.org/wiki/Digital_signal_processor">Digital signal 
  processor</A> 
  <LI><A title="CPU design" href="http://en.wikipedia.org/wiki/CPU_design">CPU 
  design</A> 
  <LI><A title="Hardware description language" 
  href="http://en.wikipedia.org/wiki/Hardware_description_language">Hardware 
  description language</A> 
  <LI><A title="Hardware architecture" 
  href="http://en.wikipedia.org/wiki/Hardware_architecture">Hardware 
  architecture</A> 
  <LI><A title="Harvard architecture" 
  href="http://en.wikipedia.org/wiki/Harvard_architecture">Harvard 
  architecture</A> 
  <LI><A title="Von Neumann architecture" 
  href="http://en.wikipedia.org/wiki/Von_Neumann_architecture">Von Neumann 
  architecture</A> 
  <LI><A class=mw-redirect title="Multi-core (computing)" 
  href="http://en.wikipedia.org/wiki/Multi-core_(computing)">Multi-core 
  (computing)</A> 
  <LI><A title=Datapath 
  href="http://en.wikipedia.org/wiki/Datapath">Datapath</A> 
  <LI><A title="Dataflow architecture" 
  href="http://en.wikipedia.org/wiki/Dataflow_architecture">Dataflow 
  architecture</A> 
  <LI><A class=mw-redirect title=VLSI 
  href="http://en.wikipedia.org/wiki/VLSI">VLSI</A> 
  <LI><A title=VHDL href="http://en.wikipedia.org/wiki/VHDL">VHDL</A> 
  <LI><A title=Verilog href="http://en.wikipedia.org/wiki/Verilog">Verilog</A> 
  <LI><A title="Stream processing" 
  href="http://en.wikipedia.org/wiki/Stream_processing">stream processing</A> 
  </LI></UL>
<P><A id=References name=References></A></P>
<H2><SPAN class=editsection>[<A title="Edit section: References" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=15">edit</A>]</SPAN> 
<SPAN class=mw-headline>References</SPAN></H2>
<OL class=references>
  <LI id=cite_note-0><B><A title="" 
  href="http://en.wikipedia.org/wiki/Microarchitecture#cite_ref-0">^</A></B> 
  <CITE class=book style="FONT-STYLE: normal">Phillip A. Laplante (2001). 
  <I>Dictionary of Computer Science, Engineering, and Technology</I>. CRC Press, 
  94–95. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0849326915">ISBN 
  0849326915</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Dictionary+of+Computer+Science%2C+Engineering%2C+and+Technology&amp;rft.au=Phillip+A.+Laplante&amp;rft.date=2001&amp;rft.pub=CRC+Press&amp;rft.pages=94%26ndash%3B95><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI id=cite_note-1><B><A title="" 
  href="http://en.wikipedia.org/wiki/Microarchitecture#cite_ref-1">^</A></B> 
  <CITE class=book style="FONT-STYLE: normal">William F. Gilreath and Phillip A. 
  Laplante (2003). <I>Computer Architecture: A Minimalist Perspective</I>. 
  Springer, 5. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/1402074166">ISBN 
  1402074166</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Architecture%3A+A+Minimalist+Perspective&amp;rft.au=William+F.+Gilreath+and+Phillip+A.+Laplante&amp;rft.date=2003&amp;rft.pub=Springer&amp;rft.pages=5><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI id=cite_note-2><B><A title="" 
  href="http://en.wikipedia.org/wiki/Microarchitecture#cite_ref-2">^</A></B> 
  <CITE class=book style="FONT-STYLE: normal">Sivarama P. Dandamudi (2003). 
  <I>Fundamentals of Computer Organization and Design</I>. Springer, 5. <A 
  class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/038795211X">ISBN 
  038795211X</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Fundamentals+of+Computer+Organization+and+Design&amp;rft.au=Sivarama+P.+Dandamudi&amp;rft.date=2003&amp;rft.pub=Springer&amp;rft.pages=5><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI id=cite_note-hennessy-3>^ <A title="" 
  href="http://en.wikipedia.org/wiki/Microarchitecture#cite_ref-hennessy_3-0"><SUP><I><B>a</B></I></SUP></A> 
  <A title="" 
  href="http://en.wikipedia.org/wiki/Microarchitecture#cite_ref-hennessy_3-1"><SUP><I><B>b</B></I></SUP></A> 
  <CITE class=book style="FONT-STYLE: normal">John L. Hennessy and David A. 
  Patterson (2003). <I>Computer Architecture: A Quantitative Approach</I>, Third 
  Edition, Morgan Kaufmann Publishers, Inc. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/1558605967">ISBN 
  1558605967</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Architecture%3A+A+Quantitative+Approach&amp;rft.au=John+L.+Hennessy+and+David+A.+Patterson&amp;rft.date=2003&amp;rft.edition=Third+Edition&amp;rft.pub=Morgan+Kaufmann+Publishers%2C+Inc><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> </LI></OL>
<P><A id=Further_reading name=Further_reading></A></P>
<H2><SPAN class=editsection>[<A title="Edit section: Further reading" 
href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit&amp;section=16">edit</A>]</SPAN> 
<SPAN class=mw-headline>Further reading</SPAN></H2>
<UL>
  <LI><CITE class=book style="FONT-STYLE: normal">D. Patterson and J. Hennessy 
  (<A title=2004 href="http://en.wikipedia.org/wiki/2004">2004</A>-<A 
  title="August 2" href="http://en.wikipedia.org/wiki/August_2">08-02</A>). 
  <I>Computer Organization and Design: The Hardware/Software Interface</I>. 
  Morgan Kaufmann Publishers, Inc.. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/1558606041">ISBN 
  1558606041</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Organization+and+Design%3A+The+Hardware%2FSoftware+Interface&amp;rft.au=D.+Patterson+and+J.+Hennessy&amp;rft.date=%5B%5B2004-08-02%5D%5D&amp;rft.pub=Morgan+Kaufmann+Publishers%2C+Inc.><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><CITE class=book style="FONT-STYLE: normal">V. C. Hamacher, Z. G. 
  Vrasenic, and S. G. Zaky (<A title=2001 
  href="http://en.wikipedia.org/wiki/2001">2001</A>-<A title="August 2" 
  href="http://en.wikipedia.org/wiki/August_2">08-02</A>). <I>Computer 
  Organization</I>. McGraw-Hill. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0072320869">ISBN 
  0072320869</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Organization&amp;rft.au=V.+C.+Hamacher%2C+Z.+G.+Vrasenic%2C+and+S.+G.+Zaky&amp;rft.date=%5B%5B2001-08-02%5D%5D&amp;rft.pub=McGraw-Hill><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><CITE class=book style="FONT-STYLE: normal">William Stallings (<A 
  title=2002 href="http://en.wikipedia.org/wiki/2002">2002</A>-<A 
  title="July 15" href="http://en.wikipedia.org/wiki/July_15">07-15</A>). 
  <I>Computer Organization and Architecture</I>. Prentice Hall. <A 
  class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0130351199">ISBN 
  0130351199</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Organization+and+Architecture&amp;rft.au=William+Stallings&amp;rft.date=%5B%5B2002-07-15%5D%5D&amp;rft.pub=Prentice+Hall><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><CITE class=book style="FONT-STYLE: normal">J. P. Hayes (<A title=2002 
  href="http://en.wikipedia.org/wiki/2002">2002</A>-<A title="September 3" 
  href="http://en.wikipedia.org/wiki/September_3">09-03</A>). <I>Computer 
  Architecture and Organization</I>. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0072861983">ISBN 
  0072861983</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Architecture+and+Organization&amp;rft.au=J.+P.+Hayes&amp;rft.date=%5B%5B2002-09-03%5D%5D><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><CITE class=book style="FONT-STYLE: normal">Gary Michael Schneider (1985). 
  <I>The Principles of Computer Organization</I>. Wiley, 6–7. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0471885525">ISBN 
  0471885525</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Principles+of+Computer+Organization&amp;rft.au=Gary+Michael+Schneider&amp;rft.date=1985&amp;rft.pub=Wiley&amp;rft.pages=6%26ndash%3B7><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><CITE class=book style="FONT-STYLE: normal">M. Morris Mano (<A title=1992 
  href="http://en.wikipedia.org/wiki/1992">1992</A>-<A title="October 19" 
  href="http://en.wikipedia.org/wiki/October_19">10-19</A>). <I>Computer System 
  Architecture</I>. Prentice Hall, 3. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0131755633">ISBN 
  0131755633</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+System+Architecture&amp;rft.au=M.+Morris+Mano&amp;rft.date=%5B%5B1992-10-19%5D%5D&amp;rft.pub=Prentice+Hall&amp;rft.pages=3><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><CITE class=book style="FONT-STYLE: normal">Mostafa Abd-El-Barr and Hesham 
  El-Rewini (<A title=2004 href="http://en.wikipedia.org/wiki/2004">2004</A>-<A 
  title="December 3" href="http://en.wikipedia.org/wiki/December_3">12-03</A>). 
  <I>Fundamentals of Computer Organization and Architecture</I>. 
  Wiley-Interscience, 1. <A class=internal 
  href="http://en.wikipedia.org/wiki/Special:BookSources/0471467413">ISBN 
  0471467413</A>.</CITE><SPAN class=Z3988 
  title=ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Fundamentals+of+Computer+Organization+and+Architecture&amp;rft.au=Mostafa+Abd-El-Barr+and+Hesham+El-Rewini&amp;rft.date=%5B%5B2004-12-03%5D%5D&amp;rft.pub=Wiley-Interscience&amp;rft.pages=1><SPAN 
  style="DISPLAY: none">&nbsp;</SPAN></SPAN> 
  <LI><A class="external text" title=http://www.computer.org 
  href="http://www.computer.org/" rel=nofollow>IEEE Computer Society</A> 
  <LI><A class="external text" 
  title=http://www.extremetech.com/article2/0,1697,17414,00.asp 
  href="http://www.extremetech.com/article2/0,1697,17414,00.asp" rel=nofollow>PC 
  Processor Microarchitecture</A> </LI></UL>
<TABLE class=navbox cellSpacing=0>
  <TBODY>
  <TR>
    <TD 
    style="PADDING-RIGHT: 2px; PADDING-LEFT: 2px; PADDING-BOTTOM: 2px; PADDING-TOP: 2px">
      <TABLE class="nowraplinks collapsible autocollapse" 
      style="BACKGROUND: none transparent scroll repeat 0% 0%; WIDTH: 100%" 
      cellSpacing=0>
        <TBODY>
        <TR>
          <TH class=navbox-title colSpan=2>
            <DIV style="FLOAT: left; WIDTH: 6em; TEXT-ALIGN: left">
            <DIV class="noprint plainlinksneverexpand" 
            style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-WEIGHT: normal; FONT-SIZE: xx-small; PADDING-BOTTOM: 0px; BORDER-TOP-STYLE: none; PADDING-TOP: 0px; BORDER-RIGHT-STYLE: none; WHITE-SPACE: nowrap; BORDER-LEFT-STYLE: none; BACKGROUND-COLOR: transparent; BORDER-BOTTOM-STYLE: none"><A 
            title="Template:CPU technologies" 
            href="http://en.wikipedia.org/wiki/Template:CPU_technologies"><SPAN 
            title="View this template" 
            style="BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: none; BORDER-BOTTOM-STYLE: none">v</SPAN></A>&nbsp;<SPAN 
            style="FONT-SIZE: 80%">•</SPAN>&nbsp;<A 
            title="Template talk:CPU technologies" 
            href="http://en.wikipedia.org/wiki/Template_talk:CPU_technologies"><SPAN 
            title="Discussion about this template" 
            style="COLOR: #002bb8; BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: none; BORDER-BOTTOM-STYLE: none">d</SPAN></A>&nbsp;<SPAN 
            style="FONT-SIZE: 80%">•</SPAN>&nbsp;<A class="external text" 
            title=http://en.wikipedia.org/w/index.php?title=Template:CPU_technologies&amp;action=edit 
            href="http://en.wikipedia.org/w/index.php?title=Template:CPU_technologies&amp;action=edit" 
            rel=nofollow><SPAN 
            title="You can edit this template. Please use the preview button before saving." 
            style="COLOR: #002bb8; BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: none; BORDER-BOTTOM-STYLE: none">e</SPAN></A></DIV></DIV><SPAN 
            style="FONT-SIZE: 110%"><A title="Central processing unit" 
            href="http://en.wikipedia.org/wiki/Central_processing_unit">CPU 
            technologies</A></SPAN></TH></TR>
        <TR style="HEIGHT: 2px">
          <TD></TD></TR>
        <TR>
          <TD class=navbox-group><A class=mw-redirect 
            title="Instruction set architecture" 
            href="http://en.wikipedia.org/wiki/Instruction_set_architecture">Architecture</A></TD>
          <TD class="navbox-list navbox-odd" 
          style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
            <DIV 
            style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
            title="Instruction set" 
            href="http://en.wikipedia.org/wiki/Instruction_set">ISA</A>&nbsp;: 
            <A title="Complex instruction set computer" 
            href="http://en.wikipedia.org/wiki/Complex_instruction_set_computer">CISC</A> 
            <SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Explicit Data Graph Execution" 
            href="http://en.wikipedia.org/wiki/Explicit_Data_Graph_Execution">EDGE</A> 
            <SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Explicitly parallel instruction computing" 
            href="http://en.wikipedia.org/wiki/Explicitly_parallel_instruction_computing">EPIC</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Minimal instruction set computer" 
            href="http://en.wikipedia.org/wiki/Minimal_instruction_set_computer">MISC</A> 
            <SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="One instruction set computer" 
            href="http://en.wikipedia.org/wiki/One_instruction_set_computer">OISC</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Reduced instruction set computer" 
            href="http://en.wikipedia.org/wiki/Reduced_instruction_set_computer">RISC</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Very long instruction word" 
            href="http://en.wikipedia.org/wiki/Very_long_instruction_word">VLIW</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Zero Instruction Set Computer" 
            href="http://en.wikipedia.org/wiki/Zero_Instruction_Set_Computer">ZISC</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Harvard architecture" 
            href="http://en.wikipedia.org/wiki/Harvard_architecture">Harvard 
            architecture</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Von Neumann architecture" 
            href="http://en.wikipedia.org/wiki/Von_Neumann_architecture">Von 
            Neumann architecture</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=32-bit 
            href="http://en.wikipedia.org/wiki/32-bit">32 bit</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=64-bit 
            href="http://en.wikipedia.org/wiki/64-bit">64 bit</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=128-bit 
            href="http://en.wikipedia.org/wiki/128-bit">128 bit</A></DIV></TD></TR>
        <TR style="HEIGHT: 2px">
          <TD></TD></TR>
        <TR>
          <TD class=navbox-group><A title="Parallel computing" 
            href="http://en.wikipedia.org/wiki/Parallel_computing">Parallelism</A></TD>
          <TD class="navbox-list navbox-even" 
          style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
            <DIV 
            style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"></DIV>
            <TABLE class="nowraplinks navbox-subgroup" style="WIDTH: 100%" 
            cellSpacing=0>
              <TBODY>
              <TR>
                <TD class=navbox-group 
                style="PADDING-RIGHT: 0em; PADDING-LEFT: 0em">
                  <DIV 
                  style="PADDING-RIGHT: 0.75em; PADDING-LEFT: 0.75em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em">Pipeline</DIV></TD>
                <TD class="navbox-list navbox-odd" 
                style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
                  <DIV 
                  style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
                  title="Instruction pipeline" 
                  href="http://en.wikipedia.org/wiki/Instruction_pipeline">Instruction 
                  pipelining</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> 
                  <A title="Out-of-order execution" 
                  href="http://en.wikipedia.org/wiki/Out-of-order_execution">In-Order 
                  &amp; Out-of-Order execution</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title="Register renaming" 
                  href="http://en.wikipedia.org/wiki/Register_renaming">Register 
                  renaming</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title="Speculative execution" 
                  href="http://en.wikipedia.org/wiki/Speculative_execution">Speculative 
                  execution</A></DIV></TD></TR>
              <TR style="HEIGHT: 2px">
                <TD></TD></TR>
              <TR>
                <TD class=navbox-group 
                style="PADDING-RIGHT: 0em; PADDING-LEFT: 0em">
                  <DIV 
                  style="PADDING-RIGHT: 0.75em; PADDING-LEFT: 0.75em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em">Level</DIV></TD>
                <TD class="navbox-list navbox-even" 
                style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
                  <DIV 
                  style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
                  title="Bit-level parallelism" 
                  href="http://en.wikipedia.org/wiki/Bit-level_parallelism">Bit</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title="Instruction level parallelism" 
                  href="http://en.wikipedia.org/wiki/Instruction_level_parallelism">Instruction</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=Superscalar 
                  href="http://en.wikipedia.org/wiki/Superscalar">Superscalar</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title="Data parallelism" 
                  href="http://en.wikipedia.org/wiki/Data_parallelism">Data</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title="Task parallelism" 
                  href="http://en.wikipedia.org/wiki/Task_parallelism">Task</A></DIV></TD></TR>
              <TR style="HEIGHT: 2px">
                <TD></TD></TR>
              <TR>
                <TD class=navbox-group 
                style="PADDING-RIGHT: 0em; PADDING-LEFT: 0em">
                  <DIV 
                  style="PADDING-RIGHT: 0.75em; PADDING-LEFT: 0.75em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em">Threads</DIV></TD>
                <TD class="navbox-list navbox-odd" 
                style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
                  <DIV 
                  style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
                  title="Multithreading (computer hardware)" 
                  href="http://en.wikipedia.org/wiki/Multithreading_(computer_hardware)">Multithreading</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title="Simultaneous multithreading" 
                  href="http://en.wikipedia.org/wiki/Simultaneous_multithreading">Simultaneous 
                  multithreading</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title=Hyper-threading 
                  href="http://en.wikipedia.org/wiki/Hyper-threading">Hyperthreading</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
                  title=Super-threading 
                  href="http://en.wikipedia.org/wiki/Super-threading">Superthreading</A></DIV></TD></TR>
              <TR style="HEIGHT: 2px">
                <TD></TD></TR>
              <TR>
                <TD class=navbox-group 
                style="PADDING-RIGHT: 0em; PADDING-LEFT: 0em">
                  <DIV 
                  style="PADDING-RIGHT: 0.75em; PADDING-LEFT: 0.75em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
                  title="Flynn's taxonomy" 
                  href="http://en.wikipedia.org/wiki/Flynn%27s_taxonomy">Flynn's 
                  taxonomy</A></DIV></TD>
                <TD class="navbox-list navbox-even" 
                style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
                  <DIV 
                  style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
                  title=SISD 
                  href="http://en.wikipedia.org/wiki/SISD">SISD</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=SIMD 
                  href="http://en.wikipedia.org/wiki/SIMD">SIMD</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=MISD 
                  href="http://en.wikipedia.org/wiki/MISD">MISD</A><SPAN 
                  style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=MIMD 
                  href="http://en.wikipedia.org/wiki/MIMD">MIMD</A></DIV></TD></TR></TBODY></TABLE></TD></TR>
        <TR style="HEIGHT: 2px">
          <TD></TD></TR>
        <TR>
          <TD class=navbox-group>Types</TD>
          <TD class="navbox-list navbox-odd" 
          style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
            <DIV 
            style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
            title="Digital signal processor" 
            href="http://en.wikipedia.org/wiki/Digital_signal_processor">Digital 
            signal processor</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> 
            <A title=Microcontroller 
            href="http://en.wikipedia.org/wiki/Microcontroller">Microcontroller</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=System-on-a-chip 
            href="http://en.wikipedia.org/wiki/System-on-a-chip">System-on-a-chip</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title="Vector processor" 
            href="http://en.wikipedia.org/wiki/Vector_processor">Vector 
            processor</A></DIV></TD></TR>
        <TR style="HEIGHT: 2px">
          <TD></TD></TR>
        <TR>
          <TD class=navbox-group>Components</TD>
          <TD class="navbox-list navbox-even" 
          style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
            <DIV 
            style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
            title="Arithmetic logic unit" 
            href="http://en.wikipedia.org/wiki/Arithmetic_logic_unit">Arithmetic 
            logic unit (ALU)</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> 
            <A title="Floating point unit" 
            href="http://en.wikipedia.org/wiki/Floating_point_unit">Floating 
            point unit (FPU)</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> 
            <A title="Back side bus" 
            href="http://en.wikipedia.org/wiki/Back_side_bus">Backside 
            Bus</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            class=mw-redirect title=Demultiplexer 
            href="http://en.wikipedia.org/wiki/Demultiplexer">Demultiplexer</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Processor register" 
            href="http://en.wikipedia.org/wiki/Processor_register">Registers</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Memory management unit" 
            href="http://en.wikipedia.org/wiki/Memory_management_unit">Memory 
            management unit (MMU)</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title=Multiplexer 
            href="http://en.wikipedia.org/wiki/Multiplexer">Multiplexer</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Translation lookaside buffer" 
            href="http://en.wikipedia.org/wiki/Translation_lookaside_buffer">Translation 
            lookaside buffer (TLB)</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A title="CPU cache" 
            href="http://en.wikipedia.org/wiki/CPU_cache">Cache</A></DIV></TD></TR>
        <TR style="HEIGHT: 2px">
          <TD></TD></TR>
        <TR>
          <TD class=navbox-group><A title="Power management" 
            href="http://en.wikipedia.org/wiki/Power_management">Power 
            management</A></TD>
          <TD class="navbox-list navbox-odd" 
          style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; BORDER-LEFT: #fdfdfd 2px solid; WIDTH: 100%; PADDING-TOP: 0px; TEXT-ALIGN: left">
            <DIV 
            style="PADDING-RIGHT: 0.25em; PADDING-LEFT: 0.25em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em"><A 
            title="Advanced Power Management" 
            href="http://en.wikipedia.org/wiki/Advanced_Power_Management">APM</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Advanced Configuration and Power Interface" 
            href="http://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface">ACPI</A> 
            <A title="Advanced Configuration and Power Interface" 
            href="http://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface#States">(states)</A><SPAN 
            style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Dynamic frequency scaling" 
            href="http://en.wikipedia.org/wiki/Dynamic_frequency_scaling">Dynamic 
            frequency scaling</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> 
            <A title="Dynamic voltage scaling" 
            href="http://en.wikipedia.org/wiki/Dynamic_voltage_scaling">Dynamic 
            voltage scaling</A><SPAN style="FONT-WEIGHT: bold">&nbsp;·</SPAN> <A 
            title="Clock gating" 
            href="http://en.wikipedia.org/wiki/Clock_gating">Clock 
            gating</A></DIV></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><!-- 
NewPP limit report
Preprocessor node count: 2942/1000000
Post-expand include size: 40875/2048000 bytes
Template argument size: 30609/2048000 bytes
Expensive parser function count: 0/500
--><!-- Saved in parser cache with key enwiki:pcache:idhash:1410175-0!1!0!default!!en!2 and timestamp 20081023044905 -->
<DIV class=printfooter>Retrieved from "<A 
href="http://en.wikipedia.org/wiki/Microarchitecture">http://en.wikipedia.org/wiki/Microarchitecture</A>"</DIV>
<DIV class=catlinks id=catlinks>
<DIV id=mw-normal-catlinks><A title=Special:Categories 
href="http://en.wikipedia.org/wiki/Special:Categories">Categories</A>: <SPAN 
dir=ltr><A title="Category:Central processing unit" 
href="http://en.wikipedia.org/wiki/Category:Central_processing_unit">Central 
processing unit</A></SPAN> | <SPAN dir=ltr><A 
title="Category:Instruction processing" 
href="http://en.wikipedia.org/wiki/Category:Instruction_processing">Instruction 
processing</A></SPAN> | <SPAN dir=ltr><A title=Category:Microprocessors 
href="http://en.wikipedia.org/wiki/Category:Microprocessors">Microprocessors</A></SPAN> 
| <SPAN dir=ltr><A title="Category:Computer architecture" 
href="http://en.wikipedia.org/wiki/Category:Computer_architecture">Computer 
architecture</A></SPAN></DIV></DIV><!-- end content -->
<DIV class=visualClear></DIV></DIV></DIV></DIV>
<DIV id=column-one>
<DIV class=portlet id=p-cactions>
<H5>Views</H5>
<DIV class=pBody>
<UL>
  <LI class=selected id=ca-nstab-main><A title="View the content page [c]" 
  accessKey=c href="http://en.wikipedia.org/wiki/Microarchitecture">Article</A> 
  <LI id=ca-talk><A title="Discussion about the content page [t]" accessKey=t 
  href="http://en.wikipedia.org/wiki/Talk:Microarchitecture">Discussion</A> 
  <LI id=ca-edit><A 
  title="You can edit this page. &#10;Please use the preview button before saving. [e]" 
  accessKey=e 
  href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=edit">Edit 
  this page</A> 
  <LI id=ca-history><A title="Past versions of this page [h]" accessKey=h 
  href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;action=history">History</A> 
  </LI></UL></DIV></DIV>
<DIV class=portlet id=p-personal>
<H5>Personal tools</H5>
<DIV class=pBody>
<UL>
  <LI id=pt-login><A 
  title="You are encouraged to log in; however, it is not mandatory. [o]" 
  accessKey=o 
  href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Microarchitecture">Log 
  in / create account</A> </LI></UL></DIV></DIV>
<DIV class=portlet id=p-logo><A title="Visit the main page [z]" 
style="BACKGROUND-IMAGE: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png)" 
accessKey=z href="http://en.wikipedia.org/wiki/Main_Page"></A></DIV>
<SCRIPT type=text/javascript> if (window.isMSIE55) fixalpha(); </SCRIPT>

<DIV class="generated-sidebar portlet" id=p-navigation>
<H5>Navigation</H5>
<DIV class=pBody>
<UL>
  <LI id=n-mainpage-description><A title="Visit the main page [z]" accessKey=z 
  href="http://en.wikipedia.org/wiki/Main_Page">Main page</A> 
  <LI id=n-contents><A title="Guides to browsing Wikipedia" 
  href="http://en.wikipedia.org/wiki/Portal:Contents">Contents</A> 
  <LI id=n-featuredcontent><A title="Featured content — the best of Wikipedia" 
  href="http://en.wikipedia.org/wiki/Portal:Featured_content">Featured 
  content</A> 
  <LI id=n-currentevents><A 
  title="Find background information on current events" 
  href="http://en.wikipedia.org/wiki/Portal:Current_events">Current events</A> 
  <LI id=n-randompage><A title="Load a random article [x]" accessKey=x 
  href="http://en.wikipedia.org/wiki/Special:Random">Random article</A> 
</LI></UL></DIV></DIV>
<DIV class=portlet id=p-search>
<H5><LABEL for=searchInput>Search</LABEL></H5>
<DIV class=pBody id=searchBody>
<FORM id=searchform action=/wiki/Special:Search>
<DIV><INPUT id=searchInput title="Search Wikipedia [f]" accessKey=f name=search> 
<INPUT class=searchButton id=searchGoButton title="Go to a page with this exact name if one exists" type=submit value=Go name=go>&nbsp; 
<INPUT class=searchButton id=mw-searchButton title="Search Wikipedia for this text" type=submit value=Search name=fulltext> 
</DIV></FORM></DIV></DIV>
<DIV class="generated-sidebar portlet" id=p-interaction>
<H5>Interaction</H5>
<DIV class=pBody>
<UL>
  <LI id=n-aboutsite><A title="Find out about Wikipedia" 
  href="http://en.wikipedia.org/wiki/Wikipedia:About">About Wikipedia</A> 
  <LI id=n-portal><A 
  title="About the project, what you can do, where to find things" 
  href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal">Community 
  portal</A> 
  <LI id=n-recentchanges><A title="The list of recent changes in the wiki [r]" 
  accessKey=r href="http://en.wikipedia.org/wiki/Special:RecentChanges">Recent 
  changes</A> 
  <LI id=n-contact><A title="How to contact Wikipedia" 
  href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</A> 

  <LI id=n-sitesupport><A title="Support us" 
  href="http://wikimediafoundation.org/wiki/Donate">Donate to Wikipedia</A> 
  <LI id=n-help><A title="Guidance on how to use and edit Wikipedia" 
  href="http://en.wikipedia.org/wiki/Help:Contents">Help</A> 
</LI></UL></DIV></DIV>
<DIV class=portlet id=p-tb>
<H5>Toolbox</H5>
<DIV class=pBody>
<UL>
  <LI id=t-whatlinkshere><A 
  title="List of all English Wikipedia pages containing links to this page [j]" 
  accessKey=j 
  href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Microarchitecture">What 
  links here</A> 
  <LI id=t-recentchangeslinked><A 
  title="Recent changes in pages linked from this page [k]" accessKey=k 
  href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Microarchitecture">Related 
  changes</A> 
  <LI id=t-upload><A title="Upload files [u]" accessKey=u 
  href="http://en.wikipedia.org/wiki/Wikipedia:Upload">Upload file</A> 
  <LI id=t-specialpages><A title="List of all special pages [q]" accessKey=q 
  href="http://en.wikipedia.org/wiki/Special:SpecialPages">Special pages</A> 
  <LI id=t-print><A title="Printable version of this page [p]" accessKey=p 
  href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;printable=yes">Printable 
  version</A> 
  <LI id=t-permalink><A title="Permanent link to this version of the page" 
  href="http://en.wikipedia.org/w/index.php?title=Microarchitecture&amp;oldid=235982632">Permanent 
  link</A>
  <LI id=t-cite><A 
  href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Microarchitecture&amp;id=235982632">Cite 
  this page</A> </LI></UL></DIV></DIV>
<DIV class=portlet id=p-lang>
<H5>Languages</H5>
<DIV class=pBody>
<UL>
  <LI class=interwiki-de><A 
  href="http://de.wikipedia.org/wiki/Mikroarchitektur">Deutsch</A> 
  <LI class=interwiki-fr><A 
  href="http://fr.wikipedia.org/wiki/Microarchitecture">Français</A> 
  <LI class=interwiki-ko><A 
  href="http://ko.wikipedia.org/wiki/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98">한국어</A> 

  <LI class=interwiki-it><A 
  href="http://it.wikipedia.org/wiki/Microarchitettura">Italiano</A> 
  <LI class=interwiki-lv><A 
  href="http://lv.wikipedia.org/wiki/Mikroarhitekt%C5%ABra">Latviešu</A> 
  <LI class=interwiki-hu><A 
  href="http://hu.wikipedia.org/wiki/Mikroarchitekt%C3%BAra">Magyar</A> 
  <LI class=interwiki-ja><A 
  href="http://ja.wikipedia.org/wiki/%E3%83%9E%E3%82%A4%E3%82%AF%E3%83%AD%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3">日本語</A> 

  <LI class=interwiki-pl><A 
  href="http://pl.wikipedia.org/wiki/Mikroarchitektura_procesora">Polski</A> 
  </LI></UL></DIV></DIV></DIV><!-- end of the left (by default at least) column -->
<DIV class=visualClear></DIV>
<DIV id=footer>
<DIV id=f-poweredbyico><A href="http://www.mediawiki.org/"><IMG 
alt="Powered by MediaWiki" 
src="Microarchitecture_files/poweredby_mediawiki_88x31.png"></A></DIV>
<DIV id=f-copyrightico><A href="http://wikimediafoundation.org/"><IMG 
alt="Wikimedia Foundation" src="Microarchitecture_files/wikimedia-button.png" 
border=0></A></DIV>
<UL id=f-list>
  <LI id=lastmod>This page was last modified on 3 September 2008, at 07:33. 
  <LI id=copyright>All text is available under the terms of the <A 
  class=internal title="Wikipedia:Text of the GNU Free Documentation License" 
  href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License">GNU 
  Free Documentation License</A>. (See <B><A class=internal 
  title=Wikipedia:Copyrights 
  href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights">Copyrights</A></B> 
  for details.) <BR>Wikipedia® is a registered trademark of the <A 
  href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc</A>., a 
  U.S. registered <A class=internal title=501(c)(3) 
  href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29">501(c)(3)</A> 
  <A 
  href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</A> 
  <A class=internal title="Non-profit organization" 
  href="http://en.wikipedia.org/wiki/Non-profit_organization">nonprofit</A> <A 
  title="Charitable organization" 
  href="http://en.wikipedia.org/wiki/Charitable_organization">charity</A>.<BR>
  <LI id=privacy><A title="wikimedia:Privacy policy" 
  href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy policy</A> 
  <LI id=about><A title=Wikipedia:About 
  href="http://en.wikipedia.org/wiki/Wikipedia:About">About Wikipedia</A> 
  <LI id=disclaimer><A title="Wikipedia:General disclaimer" 
  href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer">Disclaimers</A> 
  </LI></UL></DIV></DIV>
<SCRIPT type=text/javascript>if (window.runOnloadHook) runOnloadHook();</SCRIPT>
<!-- Served by srv109 in 0.078 secs. --></BODY></HTML>
